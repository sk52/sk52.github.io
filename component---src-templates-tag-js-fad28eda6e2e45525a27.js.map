{"version":3,"sources":["webpack://sk52.github.io/./src/templates/tag.js"],"names":["pageContext","data","location","siteTitle","site","siteMetadata","title","tag","allMarkdownRemark","edges","totalCount","tagHeader","style","listStyle","map","post","node","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"wKA+EA,UAxEa,SAAC,GAAqC,IAAD,IAAlCA,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC3BC,GAAY,UAAAF,EAAKG,YAAL,mBAAWC,oBAAX,eAAyBC,QAAzB,QACVC,EAAQP,EAARO,IAFwC,EAGlBN,EAAKO,kBAA3BC,EAHwC,EAGxCA,MAAOC,EAHiC,EAGjCA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAOC,IACZ,0BAAKI,GACL,sBAAIC,MAAO,CAAEC,UAAU,SACpBJ,EAAMK,KAAI,YAAqB,IAAZC,EAAW,EAAjBC,KACNV,EAAQS,EAAKE,YAAYX,OAASS,EAAKG,OAAOC,KAEpD,OACE,sBAAIC,IAAKL,EAAKG,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIV,EAAKG,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYpB,KAG/B,6BAAQS,EAAKE,YAAYU,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQd,EAAKE,YAAYa,aAAef,EAAKgB,SAE/CL,SAAS,uBAQvB,gBAAC,EAAAF,KAAD,CAAMC,GAAG,SAAT","file":"component---src-templates-tag-js-fad28eda6e2e45525a27.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst Tags = ({ pageContext, data, location }) => {\n  const siteTitle = data.site?.siteMetadata?.title || `Title`;\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={tag} />\n      <h1>{tagHeader}</h1>\n      <ol style={{ listStyle: `none` }}>\n        {edges.map(({ node: post }) => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}