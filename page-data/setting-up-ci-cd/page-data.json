{"componentChunkName":"component---src-templates-blog-post-js","path":"/setting-up-ci-cd/","result":{"data":{"site":{"siteMetadata":{"title":"Always learning"}},"markdownRemark":{"id":"1af88e0e-8a5a-5832-a903-7e4b5393c67c","excerpt":"In this post I will talk about setting up GitHub Actions CI/CD to automatically build and deploy my Gatsby site to GitHub Pages when I push any changes to the…","html":"<p>In this post I will talk about setting up GitHub Actions CI/CD to automatically build and deploy my Gatsby site to GitHub Pages when I push any changes to the <code class=\"language-text\">main</code> branch. The post will cover:</p>\n<ol>\n<li>What I want to achieve with CI/CD, and why</li>\n<li>How I set up CI/CD using GitHub Actions to deploy to GitHub Pages</li>\n</ol>\n<h2>What and Why</h2>\n<p>Gatsby provides a simple set of <a href=\"https://www.gatsbyjs.com/docs/how-to/previews-deploys-hosting/how-gatsby-works-with-github-pages/\">instructions</a> which allow this deployment to be carried out manually by specifying a <code class=\"language-text\">deploy</code> command in the <code class=\"language-text\">package.json</code> and just running it locally. However, I’m keen to explore migrating from markdown blog posts to a headless CMS in the future, so this approach works with that in mind and provides the following benefits:</p>\n<ul>\n<li>Allows me to automatically deploy changes when I merge PR’s to my <code class=\"language-text\">main</code> branch</li>\n<li>It will allow me to setup some webhooks in future to easily trigger a new build and deploy when new content gets published in the CMS</li>\n</ul>\n<h2>How I set up CI/CD</h2>\n<ol>\n<li>Firstly install <code class=\"language-text\">gh-pages</code> by running <code class=\"language-text\">npm install gh-pages --save</code>, this package provides a way to publish the build files to a specified branch (defaults to <code class=\"language-text\">gh-pages</code> branch)</li>\n<li>\n<p>Next, create a GitHub access token, this will allow repository access from the GitHub Actions workflow, needed to push changes to the <code class=\"language-text\">gh-pages</code> branch for deployment.</p>\n<ul>\n<li>Navigate to GitHub -> Settings -> Developer Settings -> Personal access tokens</li>\n<li>Select “Generate new token”, create one which gives access to “repo” and save it with a descriptive name</li>\n<li>Copy the value of this token</li>\n<li>Navigate to the GitHub repository -> Settings -> Secrets</li>\n<li>Select “New repository secret”</li>\n<li>Paste the token as the Value, and set the name as <code class=\"language-text\">GH_TOKEN</code></li>\n</ul>\n</li>\n<li>\n<p>Now write two scripts in <code class=\"language-text\">package.json</code></p>\n<ul>\n<li><code class=\"language-text\">&quot;deploy&quot;: &quot;gatsby build --prefix-paths &amp;&amp; gh-pages -d public&quot;</code> - this script allows deployment to be carried out manually</li>\n<li><code class=\"language-text\">&quot;deploy:ci&quot;: &quot;gatsby build --prefix-paths &amp;&amp; gh-pages -d public -r https://$GH_TOKEN@github.com/username/repo.git&quot;</code> - this script will be used by our GitHub Actions workflow, it uses the token created in the previous step</li>\n</ul>\n</li>\n<li>Create a GitHub Actions workflow: <code class=\"language-text\">.github/workflows/deploy.yml</code> and add the following:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Gatsby Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> main\n\n<span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">GH_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GH_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> GitHub Config\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          git config --global user.email \"example@example.example\"\n          git config --global user.name \"example\"</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npm install</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run deploy<span class=\"token punctuation\">:</span>ci</code></pre></div>\n<ol start=\"5\">\n<li>Replace the example username and email with your own details in the <code class=\"language-text\">.yml</code> file (alternatively, if you have privacy concerns, you can set these up as GitHub secrets too following the steps used above, simply replace the email and quotation marks with something like <code class=\"language-text\">$EMAIL</code>)</li>\n<li>And that’s it! Commit and push the changes to your <code class=\"language-text\">main</code> branch and it will trigger the workflow and deploy to GitHub Pages</li>\n</ol>","frontmatter":{"title":"Deploying a Gatsby Site to GitHub Pages Using GitHub Actions CI/CD","tags":["Gatsby","CI/CD"],"date":"March 28, 2021","description":null}},"previous":{"fields":{"slug":"/first-post/"},"frontmatter":{"title":"First Post"}},"next":{"fields":{"slug":"/adding-github-actions-badge/"},"frontmatter":{"title":"Adding a GitHub Actions Status Badge to your README"}}},"pageContext":{"id":"1af88e0e-8a5a-5832-a903-7e4b5393c67c","previousPostId":"ccd964eb-81f3-5ebf-8331-0ec09afb963f","nextPostId":"f5c97a4c-6a35-5f7c-a9bc-708dbbe59b7f"}},"staticQueryHashes":["230163734","2841359383"]}